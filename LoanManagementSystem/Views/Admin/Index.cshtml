
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section NavbarOptions {
    @*<span style="width:270px"></span>*@
    <div style="display: flex; align-items: center; ">
        <p class="m-2 text-light btn" onclick="displayAnalytics()">
            Analytics
        </p>
        <p class="m-2 text-light btn" onclick="displaySchemes()">
            View Loan Schemes
        </p>
        <p class="m-2 text-light btn" onclick="displayOfficers()">
            View All Loan Officers
        </p>
    </div>
    @*<span style="width:250px"></span>*@

}


<div id="detailList" class="container">

    <!--For analytics-->
    <div id="analytics">
        @Html.Action("Analytics")
    </div>




    @*for  Loan schemes*@
    <div id="loanschemes" style="display:none">

        <div id="addscheme" style="display:none">
            <h1 class="my-3">
                Add New Scheme
            </h1>
            @Html.Partial("_PartialSchemeAdd")
        </div>

        <div id="editscheme" style="display:none">
            <h1 class="my-3">
                Edit Scheme
            </h1>
            @Html.Partial("_PartialSchemeEdit")
        </div>

        <div id="schemelist">
            <h1 class="my-3">
                List of Loan Schemes
            </h1>
            @Html.Partial("_PartialSchemeList")
        </div>
    </div>







    <div id="listofficer" style="display:none">

        <h2 class="my-3">List of LoanOfficers</h2>
        <table id="grid"></table>
        <div id="pager"></div>

    </div>
</div>
@*<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/redmond/jquery-ui.css">*@
<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/hot-sneaks/jquery-ui.css">




<script>
    var inTime = 1500
    var outTime = 0
    function displayAnalytics() {

        $("#listofficer").fadeOut(outTime)
        $("#loanschemes").fadeOut(outTime)
        $("#analytics").fadeIn(inTime, function () {
            localStorage.setItem('currentSection', 'analytics'); // Save current section
        });
    }

    function displaySchemes() {
        $("#listofficer").fadeOut(outTime)
        $("#analytics").fadeOut(outTime)
        $("#loanschemes").fadeIn(inTime, function () {
            localStorage.setItem('currentSection', 'loanschemes'); // Save current section
        });
    }

    function displayOfficers() {
        $("#loanschemes").fadeOut(outTime)
        $("#analytics").fadeOut(outTime)
        $("#listofficer").fadeIn(inTime, function () {
            localStorage.setItem('currentSection', 'listofficer'); // Save current section
        });
    }

    $(document).ready(() => {
        $("#analytics").show();
        $("#loanschemes").hide();
        $("#listofficer").hide();

        const currentSection = localStorage.getItem('currentSection');

        if (currentSection === 'analytics') {
            displayAnalytics();
        } else if (currentSection === 'loanschemes') {
            displaySchemes();
        } else if (currentSection === 'listofficer') {
            displayOfficers();
        }

        $("#grid").jqGrid({
            url: "/admin/GetData",
            datatype: "json",
            colNames: ["Id", "UserId", "First Name", "Last Name", "Email", "Phone Number", "Age", "Address", "Active Status", "Username", "Password", "FlatNo", "Building Name", "Street Name", "City", "Pincode", "State", "Country"],
            colModel: [
                { name: "OfficerId", key: true, hidden: true, editable: true, editrules: { edithidden: false } },
                { name: "User.UserId", hidden: true, editable: true, editrules: { edithidden: false } },
                { name: "User.FirstName", editable: true, width: 100, editrules: { required: true }, searchoptions: { sopt: ['eq'] }, align: "center" },
                { name: "User.LastName", editable: true, width: 100, editrules: { required: true }, searchoptions: { sopt: ['eq'] }, align: "center" },
                { name: "User.Email", editable: true, width: 150, editrules: { required: true, email: true }, searchoptions: { sopt: ['eq'] }, align: "center" },
                {
                    name: "User.PhoneNumber", editable: true, editrules: {
                        required: true,
                        width: 100,
                        number: true,
                        custom: true,
                        custom_func: function (value, colname) {
                            if (value.length !== 10) {
                                return [false, colname + ": Phone number must be exactly 10 digits long."];
                            }
                            return [true, ""];
                        }

                    }, searchoptions: { sopt: ['eq'] }, align: "center"
                },
                {
                    name: 'User.Age',
                    number: true,
                    width: 50,
                    editable: true,
                    editrules: {
                        required: true,
                        number: true,
                        custom: true,
                        custom_func: function (value, colname) {
                            // Check if the value is a valid number and within a reasonable age range (0-120)
                            if (!/^\d+$/.test(value) || value < 18 || value > 99) {
                                return [false, colname + ": Age must be a number between 18 and 99."];
                            }
                            return [true, ""];
                        }
                    },
                    search: true,
                    searchoptions: {
                        sopt: ['eq']
                    },
                    align: "center"
                },
                { name: "FullAddress", editable: false, width: 450, search: false, align: "center" },
                { name: "User.IsActive", editable: false, width: 75, editrules: { required: true }, search: false, type: 'checkbox', formatter: 'checkbox', align: "center" },
                { name: "User.Username", hidden: true, editable: true, editrules: { edithidden: true, required: true } },
                { name: "User.Password", hidden: true, edittype: 'password', editable: true, editrules: { edithidden: true, required: true } },
                { name: "User.Address.FlatNo", hidden: true, editable: true, editrules: { edithidden: true, required: true } }, // Hidden field for Flat No
                { name: "User.Address.BuildingName", hidden: true, editable: true, editrules: { edithidden: true, required: true } }, // Hidden field for Building Name
                { name: "User.Address.StreetName", hidden: true, editable: true, editrules: { edithidden: true, required: true } }, // Hidden field for Street Name
                { name: "User.Address.City", hidden: true, editable: true, editrules: { edithidden: true, required: true } }, // Hidden field for City
                {
                    name: "User.Address.PinCode", hidden: true, editable: true, editrules: {
                        edithidden: true,
                        required: true,
                        number: true,
                        custom: true,
                        custom_func: function (value, colname) {
                            if (value.length !== 6) {
                                return [false, colname + ": Pincode must be exactly 6 digits long."];
                            }
                            return [true, ""];
                        }
                    }
                }, // Hidden field for Pin Code
                { name: "User.Address.State", hidden: true, editable: true, editrules: { edithidden: true, required: true } }, // Hidden field for State
                { name: "User.Address.Country", hidden: true, editable: true, editrules: { edithidden: true, required: true } } // Hidden field for Country
            ],
            height: "275",
            width: "1300",
            caption: "Product Records",
            pager: "#pager",
            rowNum: 6,
            rowList: [5, 10, 15],
            sortname: 'User.FirstName',
            sortorder: 'asc',
            viewrecord: true,
            gridComplete: () => {
                $("#grid").jqGrid('navGrid', '#pager', { edit: true, add: true, del: true, search: true, refresh: true },

                    {
                        //edit
                        url: "/admin/edit",
                        closeAfterEdit: true,
                        width: "600",
                        beforeShowForm: (form) => {
                            var addForm = $(form);

                            // Remove existing Username and Password fields if they are present
                            addForm.find("#tr_User\\.Username").css("display", "none");
                            addForm.find("#tr_User\\.Password").css("display", "none");
                        },
                        afterSubmit: (response, postdata) => {
                            var result = JSON.parse(response.responseText);
                            if (result.success) {
                                alert(result.message)
                                return [true];
                            }
                            else {
                                alert(result.message)
                                return [false];
                            }
                        }


                    }, {

                    //add
                    url: "/admin/add",
                    closeAfterAdd: true,
                    width: "500",
                    autoheight: true,
                    addCaption: "Add New Loan Officer",
                    beforeShowForm: (form) => {
                        var addForm = $(form);

                        // Remove existing Username and Password fields if they are present
                        addForm.find("#tr_User\\.Username").css("display", "");
                        addForm.find("#tr_User\\.Age").css("display", "");
                        addForm.find("#tr_User\\.Password").css("display", "");
                    },
                    afterSubmit: (response, postdata) => {
                        console.log(postdata)
                        var result = JSON.parse(response.responseText);
                        if (result.success) {
                            alert(result.message)
                            return [true];

                        } else {
                            alert(result.message)
                            return [false];
                        }
                    }

                }, {
                    url: "/admin/DeleteUpdate",
                    width: "400",
                    afterSubmit: (response, postdata) => {
                        var result = JSON.parse(response.responseText);
                        if (result.success) {
                            alert(result.message)
                            return [true];
                        }
                        else {
                            alert(result.message)
                            return [false];
                        }
                    }

                },
                    {
                        multipleSearch: false,
                        closeAfterSearch: true
                    }
                );
                $("#refreshButton").click(() => {
                    $("#grid").jqGrid('setGridParam', { search: false });

                    $("#grid").jqGrid('setGridParam', { page: 1 }).trigger('reloadGrid')
                })
            }


        })
        $("#grid").css("max-height", "300px");
    })
</script>
