@model LoanManagementSystem.ViewModels.LoanApplicationSchemeVM

@{
    ViewBag.Title = "ApplyLoan";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<h2 class="my-2">Loan Application</h2>
<hr />
<div id="loadingOverlay" style="display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0, 0, 0, 0.7); color: white; text-align: center; padding-top: 20%; z-index: 1000;">
    <img src="~/Content/Loader.gif" />
    <h2>Loading...</h2>
</div>
<div class="container">
    <div class="row">
        <div class="col">
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.LoanScheme.LoanSchemeId, new { id = "lsid" })

                <div class="form-group">
                    @Html.LabelFor(model => model.LoanScheme.SchemeName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LoanScheme.SchemeName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.LoanScheme.SchemeName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LoanScheme.SchemeType, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LoanScheme.SchemeType, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.LoanScheme.SchemeType, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LoanScheme.InterestRate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input class="form-control" id="interestrate" name="LoanApplication.LoanAmount" type="text" value="@Model.LoanScheme.InterestRate" readonly="readonly" onblur="check" />
                        @Html.ValidationMessageFor(model => model.LoanScheme.InterestRate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LoanApplication.LoanAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LoanApplication.LoanAmount, new { htmlAttributes = new { @class = "form-control", id = "lamt", onchange = "CalculateEmi()", min = "1", step = "1", required = "required" } })
                        @Html.ValidationMessageFor(model => model.LoanApplication.LoanAmount, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.LoanApplication.Tenure, htmlAttributes: new { @class = "control-label col-md-2", style = "width:400px" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LoanApplication.Tenure, new { htmlAttributes = new { @class = "form-control", id = "lten", onchange = "CalculateEmi()", placeholder = "Tenure in months", min = "1", step = "1", required = "required" } })
                        @Html.ValidationMessageFor(model => model.LoanApplication.Tenure, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Your installment works out to be:   ", new { @class = "fw-bold my-3 text-primary", id = "emi", style = "display:none" })

                    <span id="emiamt"></span>
                    <span id="takeemi" style="display:none"></span>

                </div>


            </div>
        </div>

        <div class="col">
            @if (Model.LoanApplication.Applicant.AadharNumber == null)
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.LoanApplication.Applicant.AadharNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LoanApplication.Applicant.AadharNumber, new { htmlAttributes = new { @class = "form-control", id = "laadhar", onchange = "CalculateEmi()", min = "1", step = "1", required = "required" } })
                        @Html.ValidationMessageFor(model => model.LoanApplication.Applicant.AadharNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
            else
            {
                <div></div>
            }
            @if (Model.LoanApplication.Applicant.PANNumber == null)
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.LoanApplication.Applicant.PANNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LoanApplication.Applicant.PANNumber, new { htmlAttributes = new { @class = "form-control", id = "lpan", onchange = "CalculateEmi()", min = "1", step = "1", required = "required" } })
                        @Html.ValidationMessageFor(model => model.LoanApplication.Applicant.PANNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
            else
            {
                <div></div>
            }

            <div class="form-group my-2">
                <label style="width:200px" for="file">Select Aadhar Document:</label>
                <input type="file" name="file" id="aadharFile" required />
            </div>
            <div class="my-2">
                <label style="width:200px" for="file">Select PAN Document:</label>
                <input type="file" name="file" id="panFile" required />
            </div>
            <div class="my-2">
                <label style="width:200px" for="file">Select Photo:</label>
                <input type="file" name="file" id="photoFile" required />
            </div>

        </div>
        <div class="form-group">
            <input type="submit" value="Apply" class="btn btn-primary my-2" style="width:100px" id="detailCreate" />
            @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-danger my-2", style = "width:100px" })

        </div>

    </div>
</div>



<script>
    function CalculateEmi() {
        var tenure = $("#lten").val();
        var amount = $("#lamt").val().replace(/[^0-9.-]+/g, ''); // Strip non-numeric characters
        tenure = tenure === "" || isNaN(tenure) ? 0 : parseInt(tenure);
        amount = amount === "" || isNaN(amount) ? 0 : parseFloat(amount);

        var interest = parseInt($("#interestrate").val()) / 12 / 100 // Example fixed interest rate

        var emi = (amount * interest * Math.pow(1 + interest, tenure)) /
            (Math.pow(1 + interest, tenure) - 1);
        if (isNaN(emi) || !isFinite(emi)) {
            emi = 0;
        } else {
            emil = emi.toLocaleString('en-US', {
                style: 'currency',
                currency: 'INR'
            });
        }
        console.log(emi)
        // Display EMI in the span with id="emiamt"
        if (emi > 0) {
            $("#emi").show()
            $("#emiamt").empty();
            $("#emiamt").html(`${emil}/month`);
            $("#takeemi").val(emi.toFixed(2))

        }
    }

    $(document).ready(function () {
        var vllll = $("#lamt").val()
        $('#lamt').on('blur', function () {
            validateInput(this);
        });

        // Validate on blur for Tenure
        $('#lten').on('blur', function () {
            validateInput(this);
        });
        function validateInput(input) {
            var value = parseFloat($(input).val());
            var min = parseFloat($(input).attr('min'));
            var step = parseFloat($(input).attr('step'));

            if (isNaN(value) || value < min) {
                // Show validation error
                $(input).addClass('is-invalid');
                $(input).siblings('.text-danger').text('Value must be at least ' + min + '.');
            } else {
                // Clear validation error
                $(input).removeClass('is-invalid');
                $(input).siblings('.text-danger').text('');
            }
        }


        $("#detailCreate").click(() => {
            event.preventDefault()

            $("#loadingOverlay").show();  // Show the loading overlay
            var formData = new FormData();
            formData.append("files", $("#aadharFile")[0].files[0], $("#aadharFile")[0].files[0].name);
            formData.append("files", $("#panFile")[0].files[0], $("#panFile")[0].files[0].name); // PAN
            formData.append("files", $("#photoFile")[0].files[0], $("#photoFile")[0].files[0].name);

            var LoanApplicationData = {
                LoanAmount: $("#lamt").val().replace(/[^0-9.-]+/g, ''), // Ensure numeric value
                Tenure: $("#lten").val(),
                EMIAmount: $("#takeemi").val(),

                Applicant: {
                    AadharNumber: $("#laadhar").val(), // Assuming this should be the Aadhar input ID
                    PANNumber: $("#lpan").val(), // Assuming this should be the PAN input ID
                }
            };
            console.log(LoanApplicationData)




            $.ajax({
                url: "/customer/addloandetails",
                type: "POST",
                data: {
                    vm: {
                        LoanScheme: {
                            LoanSchemeId: $("#lsid").val()
                        },
                        LoanApplication: LoanApplicationData
                    },
                    files: {
                        formData
                    }
                },


                success: () => {
                    alert("Your documents have been sent to a loan officer for approval!");
                    window.location.href = "https://localhost:44330/Customer/index"

                    //$.ajax({
                    //    url: "/customer/uploaddoc",
                    //    type: "POST",
                    //    data: formData,
                    //    processData: false,
                    //    contentType: false,
                    //    success: () => {
                    //        $("#loadingOverlay").hide(500);
                    //        alert("Your documents have been sent to a loan officer for approval!");
                    //        window.location.href = "https://localhost:44330/Customer/index"

                    //    },
                    //    error: (err) => {
                    //        console.log("Error uploading documents:", err);
                    //    }
                    //});
                },
                error: (err) => {
                    console.log("Error sending loan application data:", err);
                }
            });
        });












        // When the input field is focused, remove currency formatting
        $('#lamt').on('focus', function () {
            var value = $(this).val().replace(/[^0-9.-]+/g, ''); // Remove non-numeric characters
            $(this).val(value); // Set the numeric value in the input
        });

        // When the input field loses focus, format the value as currency
        $('#lamt').on('blur', function () {
            var value = parseFloat($(this).val()); // Convert to float

            if (!isNaN(value)) {
                // Format as currency (USD)
                $(this).val(value.toLocaleString('en-US', {
                    style: 'currency',
                    currency: 'INR'
                }));
            } else {
                $(this).val(''); // Reset input if invalid
            }
        });
    });
</script>
