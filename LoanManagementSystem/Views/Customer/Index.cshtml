@model IEnumerable<LoanManagementSystem.Models.LoanApplication>
@using System.ComponentModel.DataAnnotations
@using System.Reflection

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@functions {
    public string GetEnumDisplayName(Enum value)
    {
        var field = value.GetType().GetField(value.ToString());
        var attribute = field.GetCustomAttribute<DisplayAttribute>();
        return attribute != null ? attribute.GetName() : value.ToString();
    }
}




<div style="display:@(Model.Count() == 0 ? "" : "none")">
    <h1 class="my-2">You have no Loan Applications</h1>
    @Html.ActionLink("Apply Now!", "schemes")
</div>
<div style="display:@(Model.Count() == 0 ? "none" : "")">
    <h1 class="my-2">My Loans</h1>


    <table class="table" style="margin-left:-75px;width:1450px;">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Scheme.SchemeName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EMIAmount)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.ApplicationDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PaymentStartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NextPaymentDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PaymentsMissed)
            </th>
            <th>@Html.DisplayNameFor(m => m.Status)</th>
            <th style="width:285px">Options</th>
        </tr>

        @foreach (var item in Model)
        {

            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Scheme.SchemeName)
                </td>
                <td>
                    @(item.EMIAmount.ToString("C", new System.Globalization.CultureInfo("en-IN")))
                </td>
                <td>
                    @item.ApplicationDate.ToString("dd-MM-yyy")
                </td>
                @if (item.Status == LoanManagementSystem.Models.ApplicationStatus.LoanRepayment)
                {
                    <td>
                        @item.PaymentStartDate.ToString("dd-MM-yyy")

                    </td>
                    <td>
                        @item.NextPaymentDate.ToString("dd-MM-yyy")
                    </td>
                }
                else if (item.Status == LoanManagementSystem.Models.ApplicationStatus.NPA)
                {
                    <td>@item.PaymentStartDate.ToString("dd-MM-yyy")</td>
                    <td>--</td>
                }
                else
                {
                    <td>--</td>
                    <td>--</td>
                }

                <td>
                    @Html.DisplayFor(modelItem => item.PaymentsMissed)
                </td>
                <td class="
                    @(item.Status == LoanManagementSystem.Models.ApplicationStatus.LoanRepayment ? "status-active" ://
                    item.Status == LoanManagementSystem.Models.ApplicationStatus.CollateralPending ? "status-collateral" ://
                    item.Status == LoanManagementSystem.Models.ApplicationStatus.AddCollateral ? "status-collateral" ://
                    item.Status == LoanManagementSystem.Models.ApplicationStatus.LoanRepayment ? "status-repayment" :
                    item.Status == LoanManagementSystem.Models.ApplicationStatus.PendingApproval ? "status-pending" ://
                    item.Status == LoanManagementSystem.Models.ApplicationStatus.LoanClosed ? "status-active" ://
                    item.Status == LoanManagementSystem.Models.ApplicationStatus.NPA ? "status-reject":
                    item.Status == LoanManagementSystem.Models.ApplicationStatus.Rejected ? "status-reject":"")">
                    <button disabled>@GetEnumDisplayName(item.Status)</button>

                </td>
                @if (item.Status == LoanManagementSystem.Models.ApplicationStatus.LoanRepayment)
                {
                    bool isWithinPaymentDateRange = DateTime.Now >= item.NextPaymentDate && DateTime.Now <= item.NextPaymentDate.AddDays(5);
                    bool paymentAlreadyDone = item.EMIPaymentMade;


                    if (isWithinPaymentDateRange && !paymentAlreadyDone)
                    {
                        <td style="width:285px">
                            @Html.ActionLink("Payments PDF", "GeneratePDF", "customer", new { id = item.ApplicationId }, new { @class = "btn btn-outline-danger", style = "width: 150px; border: none; padding: 10px; color: white; background-color: #A6133C; border-radius: 20px; border-right-color: none;" })
                            @Html.ActionLink("Pay Now!", "Index", "Payment", new { applicationId = item.ApplicationId }, new { @class = "btn btn-outline-danger", style = "width: 150px; border: none; padding: 10px; color: white; background-color: #A6133C; border-radius: 20px; border-right-color: none;" })
                        </td>
                    }
                    else
                    {
                        <td style="width:285px">

                            @Html.ActionLink("Payments PDF", "GeneratePDF", "customer", new { id = item.ApplicationId }, new { @class = "btn btn-outline-danger", style = "width: 150px; border: none; padding: 10px; color: white; background-color: #A6133C; border-radius: 20px; border-right-color: none;" })
                            <button class="btn btn-outline-danger" style="width: 100px; border: none; padding: 10px; color: white; background-color: #A6133C; border-radius: 20px; border-right-color: none;" disabled>Pay Now!</button>
                        </td>
                    }
                }

                else if (item.Status == LoanManagementSystem.Models.ApplicationStatus.AddCollateral)
                {
                    <td style="width:285px">
                        @Html.ActionLink("Add Collateral Documents", "AddCollateral", "Customer", new { applicationId = item.ApplicationId }, new { @class = "btn btn-primary" })
                    </td>
                }
                else if (item.Status == LoanManagementSystem.Models.ApplicationStatus.LoanClosed)
                {
                    <td style="width:285px">
                        @Html.ActionLink("Payments PDF", "GeneratePDF", "customer", new { id = item.ApplicationId }, new { @class = "btn btn-outline-danger", style = "width: 150px; border: none; padding: 10px; color: white; background-color: #A6133C; border-radius: 20px; border-right-color: none;margin-left:-105px;" })

                    </td>

                }
                else
                {
                    <td style="width:285px">--</td>
                }

                @*<td>@DateTime.Now</td>*@
            </tr>
        }

    </table>
    <div class="demo">
        <nav class="pagination-outer" aria-label="Page navigation">
            <ul class="pagination">
                <li class="page-item">
                    <a href="#" class="page-link" aria-label="Previous">
                        <span aria-hidden="true">«</span>
                    </a>
                </li>
                <li class="page-item"><a class="page-link" href="#">1</a></li>
                <li class="page-item"><a class="page-link" href="#">2</a></li>
                <li class="page-item active"><a class="page-link" href="#">3</a></li>
                <li class="page-item"><a class="page-link" href="#">4</a></li>
                <li class="page-item"><a class="page-link" href="#">5</a></li>
                <li class="page-item">
                    <a href="#" class="page-link" aria-label="Next">
                        <span aria-hidden="true">»</span>
                    </a>
                </li>
            </ul>
        </nav>
    </div>
    <p>
        <span class="text-primary"> Want Another Loan? Get instant Approval!</span>
        @Html.ActionLink("Apply Now!", "schemes")
    </p>
</div>






<style>
    .pagination-outer {
        text-align: center;
    }

    .pagination {
        font-family: 'Poppins', sans-serif;
        display: inline-flex;
        position: relative;
    }

        .pagination li a.page-link {
            color: #A6232A;
            background: transparent;
            font-size: 17px;
            font-weight: 600;
            text-align: center;
            line-height: 36px;
            height: 35px;
            width: 35px;
            padding: 0;
            margin: 0 7px;
            border: none;
            border-radius: 5px;
            display: block;
            position: relative;
            z-index: 0;
            transition: all 0.1s ease 0s;
        }

        .pagination li:first-child a.page-link,
        .pagination li:last-child a.page-link {
            font-size: 30px;
            line-height: 33px;
        }

        .pagination li a.page-link:hover,
        .pagination li a.page-link:focus,
        .pagination li.active a.page-link:hover,
        .pagination li.active a.page-link {
            color: #fff;
            background: #A6232A;
        }

        .pagination li a.page-link:before,
        .pagination li a.page-link:after {
            content: '';
            border-radius: 5px;
            border: 2px solid #555;
            position: absolute;
            left: 0;
            bottom: 0;
            right: 0;
            top: 0;
            z-index: -1;
            transition: all 0.3s ease 0s;
        }

        .pagination li a.page-link:before {
            border-top-color: transparent;
            border-bottom-color: transparent;
        }

        .pagination li a.page-link:after {
            border-left-color: transparent;
            border-right-color: transparent;
        }

        .pagination li a.page-link:hover:before,
        .pagination li a.page-link:focus:before,
        .pagination li.active a.page-link:hover:before,
        .pagination li.active a.page-link:before {
            left: -4px;
            right: -4px;
        }

        .pagination li a.page-link:hover:after,
        .pagination li a.page-link:focus:after,
        .pagination li.active a.page-link:hover:after,
        .pagination li.active a.page-link:after {
            top: -4px;
            bottom: -4px;
        }

    @@media only screen and (max-width: 480px) {
        .pagination {
            font-size: 0;
            display: inline-block;
        }

            .pagination li {
                display: inline-block;
                vertical-align: top;
                margin: 0 0 15px;
            }
    }

    License Terms
    .disabled-button {
        pointer-events: none;
        opacity: 0.6;
        cursor: not-allowed;
    }

    .disabled-button:hover {
        cursor: not-allowed
    }

    .btn {
        transition: opacity 0.3s; /* Smooth transition */
    }

        .btn:hover {
            cursor: pointer; /* Default cursor for enabled buttons */
        }

    .table td, .table th {
        text-align: center; /* Horizontally center text */
        vertical-align: middle; /* Vertically center text */
        white-space: nowrap;
        padding: 10px 15px;
        width: 200px;
        height: 50px;
    }



    table .status-active {
        padding: 10px;
    }

        table .status-active button {
            width: 150px;
            border: none;
            padding: 10px;
            color: white;
            background-color: green;
            border-radius: 20px;
            border-right-color: none;
        }

    table .status-collateral {
        padding: 10px;
    }

        table .status-collateral button {
            width: 150px;
            border: none;
            padding: 10px;
            color: black;
            background-color: #ffc107;
            border-radius: 20px;
            border-right-color: none;
        }

    table .status-repayment {
        padding: 10px;
    }

        table .status-repayment button {
            width: 150px;
            border: none;
            padding: 10px;
            color: white;
            background-color: green;
            border-radius: 20px;
            border-right-color: none;
        }

    table .status-pending {
        padding: 10px; /* Remove padding to fit the button height */
    }

        table .status-pending button {
            width: 150px;
            border: none;
            padding: 10px;
            color: black;
            background-color: #ffc107;
            border-radius: 20px;
            border-right-color: none;
        }

    table .status-reject {
        padding: 10px; /* Remove padding to fit the button height */
    }

        table .status-reject button {
            width: 150px;
            border: none;
            padding: 10px;
            color: white;
            background-color: #A6133C;
            border-radius: 20px;
            border-right-color: none;
        }
</style>

<script>
    const button = document.getElementById('applyButton');

    button.addEventListener('mouseover', function () {
        button.classList.add('disabled-button');
    });

    button.addEventListener('mouseleave', function () {
        button.classList.remove('disabled-button');
    });

    button.addEventListener('click', function (event) {
        if (button.classList.contains('disabled-button')) {
            event.preventDefault(); // Prevent click action if the button is disabled
        }
    });
</script>
