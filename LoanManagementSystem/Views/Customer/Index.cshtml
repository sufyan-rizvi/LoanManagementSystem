@model IEnumerable<LoanManagementSystem.Models.LoanApplication>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div style="display:@(Model.Count() == 0 ? "" : "none")">
    <h1 class="my-2">You have no Loan Applications</h1>
    @Html.ActionLink("Apply Now!", "schemes")
</div>
<div style="display:@(Model.Count() == 0 ? "none" : "")">
    <h1 class="my-2">My Loans</h1>


    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Scheme.SchemeName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EMIAmount)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.ApplicationDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PaymentStartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NextPaymentDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PaymentsMissed)
            </th>
            <th>@Html.DisplayNameFor(m => m.Status)</th>
            <th>Options</th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Scheme.SchemeName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EMIAmount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ApplicationDate)
                </td>
                @if (item.Status == LoanManagementSystem.Models.ApplicationStatus.LoanRepayment)
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.PaymentStartDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NextPaymentDate)
                    </td>
                }
                else
                {
                    <td>N/A</td>
                    <td>N/A</td>
                }

                <td>
                    @Html.DisplayFor(modelItem => item.PaymentsMissed)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                @if (item.Status == LoanManagementSystem.Models.ApplicationStatus.LoanRepayment)
                {
                    if (DateTime.Now >= item.NextPaymentDate || DateTime.Now <= item.NextPaymentDate.AddDays(5))
                    {
                        // Render the link if the condition is met
                        <td>
                            @Html.ActionLink("Pay Now!", "Index", "Payment", new {applicationId = item.ApplicationId}, new { @class = "btn btn-primary" })
                        </td>
                    }
                    else
                    {
                        // Render a disabled button if the condition is not met
                        <td>
                            <button class="btn btn-primary" disabled>Pay Now!</button>
                        </td>
                    }
                }
                else if (item.Status == LoanManagementSystem.Models.ApplicationStatus.CollateralPending)
                {
                    <td>
                        @Html.ActionLink("Add Collateral Documents", "AddCollateral", "Customer", null, new { @class = "btn btn-primary" })
                    </td>
                }
                else
                {
                    <td></td>
                }
            </tr>
        }

    </table>
    <p>
        <span class="text-primary"> Want Another Loan? Get instant Approval!</span>
        @Html.ActionLink("Apply Now!", "schemes")
    </p>
</div>

<style>
    .disabled-button {
        pointer-events: none;
        opacity: 0.6;
        cursor: not-allowed;
    }

        .disabled-button:hover {
            cursor: not-allowed
        }

    .btn {
        transition: opacity 0.3s; /* Smooth transition */
    }

        .btn:hover {
            cursor: pointer; /* Default cursor for enabled buttons */
        }
</style>

<script>
    const button = document.getElementById('applyButton');

    button.addEventListener('mouseover', function () {
        button.classList.add('disabled-button');
    });

    button.addEventListener('mouseleave', function () {
        button.classList.remove('disabled-button');
    });

    button.addEventListener('click', function (event) {
        if (button.classList.contains('disabled-button')) {
            event.preventDefault(); // Prevent click action if the button is disabled
        }
    });</script>
